Q6. Explain the concept of React fragments and when you should use them.
A. In React, fragments are a feature that allows you to group multiple elements together without adding an extra DOM element to the rendered output. 
Fragments provide a way to return multiple elements from a component without needing to wrap them in a single parent element.

Prior to the introduction of fragments, when you wanted to return multiple elements from a component, you had to wrap them in a parent element, 
such as a <div>, even if that extra wrapper was unnecessary or semantically incorrect. Fragments solve this problem by providing a 
lightweight syntax for grouping elements without the need for an extra DOM element.

import React from 'react';

function MyComponent() {
  return (
    <React.Fragment>
      <h1>Hello</h1>
      <p>World!</p>
    </React.Fragment>
  );
}


When should you use fragments? Here are a few scenarios:

1. Grouping Elements: Fragments are useful when you want to return multiple elements from a component without wrapping them in an extra DOM element. 
This is particularly helpful when you need to return a list of elements or when you want to avoid adding unnecessary markup.

2. Avoiding CSS and Layout Impacts: In cases where CSS or layout could be affected by an extra wrapper element, using fragments allows you to 
avoid those impacts. This is especially relevant when working with CSS frameworks or when dealing with specific layout requirements.

3. Higher-Order Components and Render Props: Fragments can be handy when using higher-order components (HOCs) or render props that 
expect a single component as a child. By using fragments, you can avoid introducing an additional wrapping element that might break the 
HOC or render prop usage.